// Author: @AliSawari 2023

//@version=5
indicator("Hammer", shorttitle = "Hammer", overlay=true)

// MA, RSI, MACD, ATR
MA1 = input(8, "MA1")
MA2 = input(20, "MA2")
MA3 = input(50, "MA3")

MA_offset = input(1, "MA Offset for Pullback Detection", "Used to replicate the same calculation with a slight offset")

ma8 = ta.sma(close, MA1)
ma20 = ta.sma(close, MA2)
ma50 = ta.sma(close, MA3)
rsi = ta.rsi(close, 14)
// [macdLine, signalLine, histLine] = ta.macd(close, 12, 26, 9)
// atr = ta.atr(14)
// MA for pullback approximation
ma7 = ta.sma(close, MA1 - MA_offset)
ma19 = ta.sma(close, MA2 - MA_offset)
ma49 = ta.sma(close, MA3 - MA_offset)

// X,Y comparison factor
XYFactor = input(0.2, "X to Y ratio factor", "X should be (0.1) Y for a position to be valid")
XLookBack = input(10, "Bar count back for finding X")
YLookBack = input(3, "Bar count back for finding Y")



isUptrend = (ma8 > ma20) and (ma20 > ma50) and (ma8[1] > ma20[1]) and (ma20[1] > ma50[1])
isUptrendFor50 =  (ma20 > ma50) and (ma20[1] > ma50[1])
isDowntrend = (ma8 < ma20) and (ma20 < ma50) and (ma8[1] < ma20[1]) and (ma20[1] < ma50[1])
isDowntrendFor50 = (ma20 < ma50) and (ma20[1] < ma50[1])

RSIValidationUptrend = rsi < 70 
RSIValidationDowntrend = rsi > 30

// MAs increasing in value
isMAsIncreasing = ma8 > ma8[1] and ma20 > ma20[1] and ma50 > ma50[1]
isMAsIncreasingFor50 = ma20 > ma20[1] and ma50 > ma50[1]
// MAs decreasing in value
isMAsDecreasing = ma8 < ma8[1] and ma20 < ma20[1] and ma50 < ma50[1]
isMAsDecreasingFor50 = ma20 < ma20[1] and ma50 < ma50[1]

// is either of the candles are in contact with the MA (approximation -2), in order to detect a Pullback on the MA
isHitting1 = (ma8 <= high and ma8 >= low) or (ma7 <= high and ma7 >= low)
isHitting2 = (ma8[1] <= high[1] and ma8[1] >= low[1]) or (ma7[1] <= high[1] and ma7[1] >= low[1])
isHittingMA8 = isHitting1 or isHitting2
isHitting3 = (ma20 <= high and ma20 >= low) or (ma19 <= high and ma19 >= low)
isHitting4 = (ma20[1] <= high[1] and ma20[1] >= low[1]) or (ma19[1] <= high[1] and ma19[1] >= low[1])
isHittingMA20 = isHitting3 or isHitting4
isHitting5 = (ma50 <= high and ma50 >= low) or (ma49 <= high and ma49 >= low)
isHitting6 = (ma50[1] <= high[1] and ma50[1] >= low[1]) or (ma49[1] <= high[1] and ma49[1] >= low[1])
isHittingMA50 = isHitting5 or isHitting6

// calculate X,Y
isThereRoomToBreathe(upt) => 
    isThereRoom = false
    
    X = if upt
        ta.highest(high, XLookBack) - close
    else
        close - ta.lowest(low, XLookBack)

    Y = if upt
        close - ta.lowest(low, YLookBack)
    else
        ta.highest(high, YLookBack) - close

    isAlreadyHit = if upt 
        ta.highest(high, XLookBack) == high
    else
        ta.lowest(low, XLookBack) == low

    if isAlreadyHit
        isThereRoom := false
    else if X < Y and (X >= (XYFactor * Y))
        isThereRoom := true
    else if X > Y
        isThereRoom := true

    isThereRoom


// if conditions met for Indicator Values
isConditionsMetUptrend = isUptrend and RSIValidationUptrend  and isMAsIncreasing and isThereRoomToBreathe(true)
isConditionsMetDowntrend = isDowntrend and RSIValidationDowntrend and isMAsDecreasing and isThereRoomToBreathe(false)

isConditionsMetUptrendFor50 = isUptrendFor50 and RSIValidationUptrend  and isMAsIncreasingFor50 and isThereRoomToBreathe(true)
isConditionsMetDowntrendFor50 = isDowntrendFor50 and RSIValidationDowntrend and isMAsDecreasingFor50 and isThereRoomToBreathe(false)


// Hammer Buy Pattern
isPrevBear = open[1] > close[1]
upperShadowB = high - math.max(open, close)
bodyLengthB = math.abs(close - open)
lowerShadowB = math.min(open, close) - low
prevUpperShadow = high[1] - math.max(open[1], close[1])
prevBodyLengthB = math.abs(close[1] - open[1])
isBodyBiggerThanUpperShadow = bodyLengthB >= upperShadowB
isLowerShadowTwiceTheBody = lowerShadowB >= 2 * bodyLengthB
isCloseLowerThan = math.max(open, close) < math.max(open[1], close[1])
isShadowTrailingBelow = low < low[1]
isPrevNotHammerB = prevBodyLengthB * 2 >= prevUpperShadow
isFiftyPercentBelowMA8 = (low + (0.5 * lowerShadowB)) <= ma8
isFiftyPercentBelowMA20 = (low + (0.5 * lowerShadowB)) <= ma20
isFiftyPercentBelowMA50 = (low + (0.5 * lowerShadowB)) <= ma50
isCloseAboveMA8 = math.max(open, close) >= ma8
isCloseAboveMA20 = math.max(open, close) >= ma20
isCloseAboveMA50 = math.max(open, close) >= ma50
isHammerBuyPattern = isPrevBear and isBodyBiggerThanUpperShadow and isLowerShadowTwiceTheBody and isShadowTrailingBelow and isPrevNotHammerB
isHammerBuy8 = isHammerBuyPattern and isCloseAboveMA8 and isFiftyPercentBelowMA8
isHammerBuy20 = isHammerBuyPattern and isCloseAboveMA20 and isFiftyPercentBelowMA20
isHammerBuy50 = isHammerBuyPattern and isCloseAboveMA50 and isFiftyPercentBelowMA50



// Hammer Sell Pattern
isPrevBull = open[1] < close[1]
upperShadowS = high - math.max(open, close)
bodyLengthS = math.abs(close - open)
lowerShadowS = math.min(open, close) - low
prevLowerShadow = math.min(open[1], close[1]) - low[1]
prevBodyLengthS = math.abs(close[1] - open[1])
isBodyBiggerThanLowerShadow = bodyLengthS >= lowerShadowS
isUpperShadowTwiceTheBody = upperShadowS >= 2 * bodyLengthS
isCloseAboveThan = math.min(open, close) > math.min(open[1], close[1])
isShadowTrailingAbove = high > high[1]
isPrevNotHammerS = prevBodyLengthS * 2 >= prevLowerShadow
isCloseBelowMA8 = math.min(open, close) <= ma8
isCloseBelowMA20 = math.min(open, close) <= ma20
isCloseBelowMA50 = math.min(open, close) <= ma50
isFiftyPercentAboveMA8 = (high - (0.5 * upperShadowS)) >= ma8
isFiftyPercentAboveMA20 = (high - (0.5 * upperShadowS)) >= ma20
isFiftyPercentAboveMA50 = (high - (0.5 * upperShadowS)) >= ma50
isHammerSellPattern = isPrevBull and isBodyBiggerThanLowerShadow and isUpperShadowTwiceTheBody and isShadowTrailingAbove and isPrevNotHammerS 
isHammerSell8 = isHammerSellPattern and isCloseBelowMA8 and isFiftyPercentAboveMA8
isHammerSell20 = isHammerSellPattern and isCloseBelowMA20 and isFiftyPercentAboveMA20
isHammerSell50 = isHammerSellPattern and isCloseBelowMA50 and isFiftyPercentAboveMA50


// final conditions
conditionUptrend8 = isConditionsMetUptrend and isHittingMA8 and isHammerBuy8
conditionUptrend20 = isConditionsMetUptrend and isHittingMA20 and isHammerBuy20
conditionUptrend50 = isConditionsMetUptrendFor50 and isHittingMA50 and isHammerBuy50
conditionDowntrend8 = isConditionsMetDowntrend and isHittingMA8 and isHammerSell8
conditionDowntrend20 = isConditionsMetDowntrend and isHittingMA20 and isHammerSell20
conditionDowntrend50 = isConditionsMetDowntrendFor50 and isHittingMA50 and isHammerSell50

conditionUptrend = conditionUptrend8 or conditionUptrend20 or conditionUptrend50
conditionDowntrend = conditionDowntrend8 or conditionDowntrend20 or conditionDowntrend50

// styling
labelPositionBuy = low - (ta.atr(30) * 0.6)
labelPositionSell = high + (ta.atr(30) * 0.6)
labelColorBuy = input(color.blue, "Label Color Buy")
labelColorSell = input(color.red, "Label Color Sell")
labelColorBuyBG = input(color.new(color.blue, 90), "Label Color Buy Background")
labelColorSellBG = input(color.new(color.red, 90), "Label Color Sell Background")
MA1_color = input(color.red, "MA1 Color")
MA2_color = input(color.blue, "MA2 Color")
MA3_color = input(color.gray, "MA3 Color")
bgcolor(conditionUptrend ? labelColorBuyBG : na, 0)
bgcolor(conditionDowntrend ? labelColorSellBG : na, 0)
plot(ma8, color = MA1_color)
plot(ma20, color = MA2_color)
plot(ma50, color = MA3_color)
labelTextBuy = input("BH", "Label Text for Buy indicator")
labelTextSell = input("SH", "Label Text for Sell indicator")
labelTooltipBuy = input("Buy Hammer MA", "Label Tooltip Text for Buy indicator")
labelTooltipSell = input("Sell Hammer MA", "Label Tooltip Text for Sell indicator")


getCorrectMSG(type, uptrend, context) =>
    msg = ""
    if type == "text"
        msg := if uptrend
            labelTextBuy + context
        else
            labelTextSell + context
    if type == "tooltip"
        msg := if uptrend
            labelTooltipBuy + context
        else
            labelTooltipSell + context
    
    msg


context = if (conditionUptrend8 or conditionDowntrend8)
    str.tostring(MA1)
else if (conditionUptrend20 or conditionDowntrend20)
    str.tostring(MA2)
else if (conditionUptrend50 or conditionDowntrend50)
    str.tostring(MA3)


// main
if conditionUptrend
    label.new(bar_index,labelPositionBuy,text = getCorrectMSG("text", true, context),style = label.style_label_up, color = labelColorBuy,textcolor = color.white,tooltip = getCorrectMSG("tooltip", true, context) )
else if conditionDowntrend
    label.new(bar_index,labelPositionSell,text = getCorrectMSG("text", false, context),style = label.style_label_down,color = labelColorSell,textcolor = color.white,tooltip = getCorrectMSG("tooltip", false, context) )


